#include <string>

inline static const std::string wasm_rt_content = 
"#ifndef WASM_RT_H_\n"
"#define WASM_RT_H_\n"
"\n"
"#include <stdint.h>\n"
"\n"
"#ifdef __cplusplus\n"
"extern \"C\" {\n"
"#endif\n"
"\n"
"#ifndef WASM_RT_MAX_CALL_STACK_DEPTH\n"
"#define WASM_RT_MAX_CALL_STACK_DEPTH 500\n"
"#endif\n"
"\n"
"#if (defined(__linux__) || defined(__unix__) || defined(__APPLE__)) && "
"    defined(__WORDSIZE) && __WORDSIZE == 64\n"
"\n"
"#ifndef WASM_RT_MEMCHECK_SIGNAL_HANDLER\n"
"#define WASM_RT_MEMCHECK_SIGNAL_HANDLER 1\n"
"#endif\n"
"\n"
"#if WASM_RT_MEMCHECK_SIGNAL_HANDLER\n"
"#define WASM_RT_MEMCHECK_SIGNAL_HANDLER_POSIX 1\n"
"#endif\n"
"\n"
"#else\n"
"\n"
"#if WASM_RT_MEMCHECK_SIGNAL_HANDLER\n"
"#error \"Signal handler is not supported for this OS/Architecture!\"\n"
"#endif\n"
"\n"
"#define WASM_RT_MEMCHECK_SIGNAL_HANDLER 0\n"
"#define WASM_RT_MEMCHECK_SIGNAL_HANDLER_POSIX 0\n"
"\n"
"#endif\n"
"\n"
"typedef enum {\n"
"  WASM_RT_TRAP_NONE,         /** No error. */\n"
"  WASM_RT_TRAP_OOB,          /** Out-of-bounds access in linear memory. */\n"
"  WASM_RT_TRAP_INT_OVERFLOW, /** Integer overflow on divide or truncation. */\n"
"  WASM_RT_TRAP_DIV_BY_ZERO,  /** Integer divide by zero. */\n"
"  WASM_RT_TRAP_INVALID_CONVERSION, /** Conversion from NaN to integer. */\n"
"  WASM_RT_TRAP_UNREACHABLE,        /** Unreachable instruction executed. */\n"
"  WASM_RT_TRAP_CALL_INDIRECT,      /** Invalid call_indirect, for any reason. */\n"
"  WASM_RT_TRAP_EXHAUSTION,         /** Call stack exhausted. */\n"
"} wasm_rt_trap_t;\n"
"\n"
"typedef enum {\n"
"  WASM_RT_I32,\n"
"  WASM_RT_I64,\n"
"  WASM_RT_F32,\n"
"  WASM_RT_F64,\n"
"} wasm_rt_type_t;\n"
"\n"
"typedef void (*wasm_rt_anyfunc_t)(void);\n"
"\n"
"typedef struct {\n"
"  uint32_t func_type;\n"
"  wasm_rt_anyfunc_t func;\n"
"} wasm_rt_elem_t;\n"
"\n"
"typedef struct {\n"
"  uint8_t* data;\n"
"  uint32_t pages, max_pages;\n"
"  uint32_t size;\n"
"} wasm_rt_memory_t;\n"
"\n"
"/** A Table object. */\n"
"typedef struct {\n"
"  wasm_rt_elem_t* data;\n"
"  uint32_t max_size;\n"
"  uint32_t size;\n"
"} wasm_rt_table_t;\n"
"\n"
"extern void wasm_rt_trap(wasm_rt_trap_t) __attribute__((noreturn));\n"
"\n"
"extern uint32_t wasm_rt_register_func_type(uint32_t params,\n"
"                                           uint32_t results,\n"
"                                           ...);\n"
"\n"
"extern void wasm_rt_allocate_memory(wasm_rt_memory_t*,\n"
"                                    uint32_t initial_pages,\n"
"                                    uint32_t max_pages);\n"
"\n"
"extern uint32_t wasm_rt_grow_memory(wasm_rt_memory_t*, uint32_t pages);\n"
"\n"
"extern void wasm_rt_allocate_table(wasm_rt_table_t*,\n"
"                                   uint32_t elements,\n"
"                                   uint32_t max_elements);\n"
"\n"
"extern uint32_t wasm_rt_call_stack_depth;\n"
"\n"
"#ifdef __cplusplus\n"
"}\n"
"#endif\n"
"\n"
"#endif /* WASM_RT_H_ */\n";
